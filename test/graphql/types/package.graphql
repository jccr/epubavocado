type Metadata {
  identifier: Identifier
  modified: Meta

  title(id: ID): Title
  titles(ids: [ID]): [Title]

  language(id: ID): Language
  languages(ids: [ID]): [Language]

  contributor(id: ID): Contributor
  contributors(ids: [ID]): [Contributor]

  coverage(id: ID): Coverage
  coverages(ids: [ID]): [Coverage]
  
  creator(id: ID): Creator
  creators(ids: [ID]): [Creator]
  
  date(ids: [ID]): [Date]
  
  description(id: ID): Description
  descriptions(ids: [ID]): [Description]
  
  format(id: ID): Format
  formats(ids: [ID]): [Format]
  
  publisher(id: ID): Publisher
  publishers(ids: [ID]): [Publisher]
  
  relation(id: ID): Relation
  relations(ids: [ID]): [Relation]

  rights(id: ID): Rights
  rightses(ids: [ID]): [Rights]

  source(id: ID): Source
  sources(ids: [ID]): [Source]
  
  subject(id: ID): Subject
  subjects(ids: [ID]): [Subject]
  
  type(id: ID): Type
  types(ids: [ID]): [Type]

  belongsToCollection(id: ID): BelongsToCollection
  belongsToCollections(ids: [ID]): [BelongsToCollection]

  meta(id: ID, property: String, refines: ID): Meta
  metas(ids: [ID], property: String, refines: ID): [Meta]

  link(
    id: ID
    href: String
    anyProperties: [String]
    allProperties: [String]
    onlyProperties: [String]
    anyRel: [String]
    allRel: [String]
    onlyRel: [String]
  ): [Link]
  links(
    ids: [ID]
    href: String
    anyProperties: [String]
    allProperties: [String]
    onlyProperties: [String]
    anyRel: [String]
    allRel: [String]
    onlyRel: [String]
  ): [Link]
}

type ManifestItem implements Node & Resource & Properties {
  id: ID

  href: String
  mediaType: String

  properties: [String]

  mediaOverlay: ManifestItem
  fallback: ManifestItem
}

type Manifest implements Node {
  id: ID

  item(
    id: ID
    href: String
    anyProperties: [String]
    allProperties: [String]
    onlyProperties: [String]
  ): ManifestItem
  items(
    ids: [ID]
    href: String
    anyProperties: [String]
    allProperties: [String]
    onlyProperties: [String]
  ): [ManifestItem]
}

type SpineItem implements Node & Properties {
  id: ID

  properties: [String]

  idref: ManifestItem
  linear: Boolean
}

type Spine implements Node {
  id: ID

  pageProgressionDirection: String
  toc: ManifestItem

  itemref(
    id: ID
    anyProperties: [String]
    allProperties: [String]
    onlyProperties: [String]
    linear: Boolean
  ): SpineItem
  itemrefs(
    ids: [ID]
    anyProperties: [String]
    allProperties: [String]
    onlyProperties: [String]
    linear: Boolean
  ): [SpineItem]
}

type Package implements Node & I18n {
  id: ID

  dir: String
  lang: String

  prefix: [String]

  version: String
  uniqueIdentifier: Identifier
  releaseIdentifier: String

  metadata: Metadata
  manifest: Manifest
  spine: Spine
}

type Query {
  package: Package
}
